name: Integration/Delivery
concurrency:
  group: main-ci/cd
  cancel-in-progress: true

on:
  push:
    branches: [main]

jobs:
  install_deps:
    runs-on: ubuntu-latest
    name: Install Deps

    steps:
      - uses: actions/checkout@v2.1.0
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Setup node
        id: deps_cache
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: 14

      - name: Install dependencies
        if: ${{ steps.deps_cache.outputs.cache-hit == false }}
        run: pnpm install
        working-directory: .

  lint:
    runs-on: ubuntu-latest
    name: Lint Files
    needs: install_deps
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: 14

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo '::set-output name=pnpm_cache_dir::$(pnpm store path)'

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: Install Deps
        run: pnpm install
        working-directory: .

      - run: pnpm next-tel-disable

      - name: Lint Project
        run: pnpm lint
        working-directory: .

  build:
    runs-on: ubuntu-latest
    name: Build Website
    needs: install_deps
    strategy:
      fail-fast: true
      matrix:
        node_version: [14, 16]
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - uses: actions/setup-node@v3
        with:
          node-version: ${{matrix.node_version}}
          cache: "pnpm"

      - name: Install Deps
        run: pnpm install --frozen-lockfile

      - run: pnpm next-tel-disable

      - name: Build Project
        run: pnpm build && pnpm export
        working-directory: .

      - uses: actions/cache@v3
        with:
          path: out
          key: ${{hashFiles('pnpm-lock.yaml', './next.config.js', 'views/**', 'pages/**', 'public/**', 'styles/**', 'core/**')}}

  artifacts-manager:
    runs-on: ubuntu-latest
    needs:
      - build
      - lint
    name: Save artifacts from Build
    steps:
      - uses: actions/checkout@v2.1.0

      - uses: actions/cache@v3
        with:
          path: out
          key: ${{hashFiles('pnpm-lock.yaml', './next.config.js', 'views/**', 'pages/**', 'public/**', 'styles/**', 'core/**')}}

      - uses: actions/upload-artifact@v3
        with:
          name: web-output
          path: out
          if-no-files-found: error # 'warn' or 'ignore' are also available, defaults to `warn`

  # E2E tests testing the artifact in the future

  cypress-test:
    runs-on: ubuntu-latest
    name: E2E Testing
    needs:
      - build
      - lint
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"

      - name: Install Deps
        run: pnpm install --frozen-lockfile
      - uses: actions/cache@v3
        with:
          path: out
          key: ${{hashFiles('pnpm-lock.yaml', './next.config.js', 'views/**', 'pages/**', 'public/**', 'styles/**', 'core/**')}}

      - name: Cypress run
        uses: cypress-io/github-action@v4.1.0
        with:
          install: false
          start: npx serve ./out
  deploy:
    needs:
      - cypress-test
      - artifacts-manager
    runs-on: ubuntu-latest
    name: Deploy from Artifacts
    environment:
      name: Prod
      url: https://about.v-thomas.me
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/download-artifact@v3
        with:
          name: web-output
          path: out
      - uses: amondnet/vercel-action@v20 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_SECRET }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
          working-directory: out
          vercel-args: "--prod"
