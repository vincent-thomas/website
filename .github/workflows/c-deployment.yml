name: Integration/Delivery
concurrency:
  group: main-ci/cd
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Files
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: 14

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo '::set-output name=pnpm_cache_dir::$(pnpm store path)'

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: Install Deps
        run: pnpm install
        working-directory: .

      - run: pnpm next-tel-disable

      - name: Lint Project
        run: pnpm lint
        working-directory: .

  build:
    runs-on: ubuntu-latest
    name: Build Website
    needs: lint
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"

      - name: Install Deps
        run: pnpm install --frozen-lockfile

      - run: pnpm next-tel-disable

      - name: Build Project
        run: pnpm build
        working-directory: .

      - uses: actions/upload-artifact@v3
        with:
          name: web-output
          path: out
          if-no-files-found: error

  build_storybook_and_deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Build and deploy Storybook
    environment:
      name: Storybook
      url: https://storybook.v-thomas.me
    steps:
      - uses: actions/checkout@v2
      - uses: aws-action/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"

      - name: Install Deps
        run: pnpm install --frozen-lockfile

      - run: pnpm next-tel-disable

      - name: Build Project
        run: pnpm build:storybook

      - run: aws s3 sync storybook-static/ s3://${{ secrets.AWS_S3_CONTENT_BUCKET }} --delete
      - run: aws cloudfront create-invalidation --distribution-id ${{secrets.AWS_STORYBOOK_DISTRIBUTION_ID}} --paths '/*'

  cypress-test:
    runs-on: ubuntu-latest
    name: E2E Testing
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"

      - name: Install Deps
        run: pnpm install --frozen-lockfile

      - name: vercel-preview-url
        uses: zentered/vercel-preview-url@v1.0.0
        id: vercel_preview_url
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_SECRET }}
        with:
          vercel_team_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Cypress run
        uses: cypress-io/github-action@v4.1.0
        with:
          record: false
          install: false
          config: baseUrl=${{steps.vercel_preview_url.outputs.preview_url}}
  deploy:
    needs:
      - cypress-test
      - build_storybook_and_deploy
    runs-on: ubuntu-latest
    name: Deploy from Artifacts
    environment:
      name: Prod
      url: https://about.v-thomas.me
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/download-artifact@v3
        with:
          name: web-output
          path: out
      - uses: amondnet/vercel-action@v20 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_SECRET }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
          working-directory: out
          vercel-args: "--prod"

  lighthouse:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@master
      - name: Lighthouse
        uses: foo-software/lighthouse-check-action@master
        with:
          urls: "https://about.v-thomas.me"
