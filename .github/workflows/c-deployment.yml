name: Deployment
concurrency:
  group: main-cd
  cancel-in-progress: true

on:
  push:
    branches:
      - main

jobs:
  Testing:
    runs-on: ubuntu-latest
    name: Testing
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          cache: "pnpm"
          node-version: 14

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo '::set-output name=pnpm_cache_dir::$(pnpm store path)'

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store
      - name: Install Deps
        run: pnpm install
        working-directory: .

      - run: pnpm next-tel-disable

      - name: Static Analysis
        run: pnpm lint
        working-directory: .

      - name: Unit Testing
        uses: cypress-io/github-action@v4.1.0
        with:
          record: false
          install: false
          component: true
  build:
    runs-on: ubuntu-latest
    name: Build Website
    needs: prepare
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"

      - name: Install Deps
        run: pnpm install --frozen-lockfile

      - run: pnpm next-tel-disable

      - name: Build Project
        run: pnpm build
        working-directory: .

      - uses: actions/upload-artifact@v3
        with:
          name: web-output
          path: out
          if-no-files-found: error

  cypress-test:
    runs-on: ubuntu-latest
    name: E2E Testing
    needs: [build, lint]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "pnpm"

      - name: Install Deps
        run: pnpm install --frozen-lockfile

      - name: Get Vercel Preview URL
        id: get_url
        uses: vincent-thomas/fetch-vercel-preview@main
        with:
          vercel_token: ${{ secrets.VERCEL_SECRET }}
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Echo preview
        run: echo "Preview url is ready ${{ steps.get_url.outputs.preview_url }}"
      - name: Cypress run
        uses: cypress-io/github-action@v4.1.0
        with:
          record: false
          install: false
          config: baseUrl=${{steps.get_url.outputs.preview_url}}
  deploy:
    needs:
      - cypress-test
      - build_storybook_and_deploy
    runs-on: ubuntu-latest
    name: Deploy from Artifacts
    environment:
      name: Prod
      url: https://about.v-thomas.me
    steps:
      - uses: actions/checkout@v2.1.0
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/download-artifact@v3
        with:
          name: web-output
          path: out
      - uses: amondnet/vercel-action@v20 #deploy
        with:
          vercel-token: ${{ secrets.VERCEL_SECRET }} # Required
          github-token: ${{ secrets.GITHUB_TOKEN }} #Optional
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID}} #Required
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID}} #Required
          working-directory: out
          vercel-args: "--prod"
